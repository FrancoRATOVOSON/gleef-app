// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String       @id @default(uuid())         @map("id")
  username         String       @unique                     @map("username")
  password         String                                     @map("password")
  createdAt        DateTime     @default(now())              @map("created_at")
  updatedAt        DateTime     @updatedAt                   @map("updated_at")

  @@map("user")
}

model Project {
  id               String           @id @default(ulid())     @map("id")
  name             String           @unique                  @map("name")
  createdAt        DateTime         @default(now())          @map("created_at")
  updatedAt        DateTime         @updatedAt               @map("updated_at")

  translationKeys  TranslationKey[]

  @@map("project")
}

model Locale {
  id           String        @id @default(uuid())            @map("id")
  code         String        @unique                         @map("code")
  name         String                                       @map("name")
  createdAt    DateTime      @default(now())                 @map("created_at")
  updatedAt    DateTime      @updatedAt                      @map("updated_at")

  translations Translation[]

  @@map("locale")
}

model TranslationKey {
  id               String        @id @default(uuid())        @map("id")
  keyPath          String        @unique                     @map("key_path")
  isGroupHeader    Boolean       @default(false)             @map("is_group_header")
  createdAt        DateTime      @default(now())             @map("created_at")
  updatedAt        DateTime      @updatedAt                  @map("updated_at")

  projectId        String                                     @map("project_id")
  project          Project       @relation(fields: [projectId], references: [id])

  translations     Translation[]

  @@unique([projectId, keyPath])
  @@map("translation_key")
}

model Translation {
  id                 String         @id @default(uuid())     @map("id")
  value              String?                                    @map("value")
  createdAt          DateTime       @default(now())             @map("created_at")
  updatedAt          DateTime       @updatedAt                  @map("updated_at")

  translationKeyId   String                                     @map("translation_key_id")
  translationKey     TranslationKey @relation(fields: [translationKeyId], references: [id])

  localeId           String                                     @map("locale_id")
  locale             Locale         @relation(fields: [localeId], references: [id])

  @@unique([translationKeyId, localeId])
  @@map("translation")
}
