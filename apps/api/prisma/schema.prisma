// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String       @id @default(uuid())
  username         String       @unique
  password         String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}


model Project {
  id               String           @id @default(ulid())
  name             String           @unique
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  translationKeys  TranslationKey[]
}

model Locale {
  id           String        @id @default(uuid())
  code         String        @unique // e.g., "en-us", "fr-fr", "de-de"
  name         String        // e.g., "English (United States)", "Fran√ßais (France)"
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  translations Translation[]
}

model TranslationKey {
  id               String        @id @default(uuid())
  keyPath          String        @unique // The full dot-separated key path (e.g., "app.title")
  projectId        String
  project          Project       @relation(fields: [projectId], references: [id])
  isGroupHeader    Boolean       @default(false)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  translations     Translation[]
  @@unique([projectId, keyPath])
}

model Translation {
  id                 String         @id @default(uuid())
  value              String?

  translationKeyId   String
  translationKey     TranslationKey @relation(fields: [translationKeyId], references: [id])

  localeId           String
  locale             Locale         @relation(fields: [localeId], references: [id])

  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt

  @@unique([translationKeyId, localeId])
}
